{
  "resourceType": "Bundle",
  "type": "transaction",
  "entry": [
    {
      "resource": {
        "resourceType": "Library",
        "id": "FHIRHelpers",
        "version": "3.0.0",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "status": "draft",
        "content": [
          {
            "contentType": "text/cql",
            "data": ""
          }
        ]
      }
    },
    {
      "resource": {
        "resourceType": "Library",
        "id": "ATInternalCDSConnectCommonsforFHIRv300",
        "version": "1.0.2",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "status": "draft",
        "content": [
          {
            "contentType": "text/cql",
            "data": "Ly8gQ0RTIENvbm5lY3QgQ29tbW9ucyBmb3IgRkhJUnYxMDIKLy8gQ2hhbmdlIGxvZzoKLy8gLSAxLjAuMQovLyAgIC0gUmVtb3ZlIE51bGxTYWZlIGNvbnZlcnNpb24gZnVuY3Rpb25zIHNpbmNlIEZISVJIZWxwZXJzIG5vdyBkb2VzIG51bGwtc2FmZSBjb252ZXJzaW9ucwovLyAgIC0gTm90ZSBmdW5jdGlvbnMgdGhhdCBleGlzdCBpbiBEU1RVMiB2ZXJzaW9uIG9mIGNvbW1vbnMsIGJ1dCBub3QgaGVyZSBpbiBTVFUzIHZlcnNpb24KLy8gLSAxLjAuMgovLyAgIC0gQWRkIGZ1bmN0aW9ucyBmb3IgdGhlIEltbXVuaXphdGlvbiByZXNvdXJjZQovLyAgIC0gQWRkIGZ1bmN0aW9ucyBmb3IgdGhlIERldmljZSByZXNvdXJjZQpsaWJyYXJ5IEFUSW50ZXJuYWxDRFNDb25uZWN0Q29tbW9uc2ZvckZISVJ2MzAwIHZlcnNpb24gJzEuMC4yJwoKdXNpbmcgRkhJUiB2ZXJzaW9uICczLjAuMCcKCi8vIEluY2x1ZGUgdGhlIEZISVJIZWxwZXJzIGxpYnJhcnkgZm9yIHNpbXBsaWZ5aW5nIGludGVyYWN0b24gdy8gdGhlIEZISVIgZGF0YSBtb2RlbAppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzMuMC4wJyBjYWxsZWQgRkhJUkhlbHBlcnMKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIE9CU0VSVkFUSU9OUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKLyoqCiAqIEZpbHRlcnMgT2JzZXJ2YXRpb25zIGJ5IGEgY29uY2VwdCByYXRoZXIgdGhhbiBieSBhIFZhbHVlU2V0LiAgSW4gQ1FMIDEuMywgdGhpcyB3aWxsIGJlIGJ1aWx0IGludG8gdGhlIHJldHJpZXZlLAogKiBidXQgZm9yIG5vdywgd2UgbXVzdCB1c2UgYSBxdWVyeSB3aGVyZSBjbGF1c2UuCiAqIEBwYXJhbSBLb25jZXB0IC0gdGhlIGNvbmNlcHQgdG8gZmlsdGVyIG9uIChpbnRlbnRpb25hbGx5IG1pc3BlbGxlZCB0byBhdm9pZCBuYW1pbmcgY2xhc2hlcykKICogQHJldHVybnMge0xpc3Q8T2JzZXJ2YXRpb24+fSBhIGxpc3Qgb2YgT2JzZXJ2YXRpb25zIG1hdGNoaW5nIHRoZSBjb25jZXB0LCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIE9ic2VydmF0aW9uc0J5Q29uY2VwdChLb25jZXB0IFN5c3RlbS5Db25jZXB0KToKICBbT2JzZXJ2YXRpb25dIE8gd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KE8uY29kZSkgfiBLb25jZXB0CgovKioKICogT2JzZXJ2YXRpb25zIHRoYXQgYXJlIGNvbXBsZXRlIGFuZCB2ZXJpZmllZC4gSW4gRkhJUiBTVFUzLCB0aGVyZSBhcmUgdHdvIHN0YXR1c2VzIHRoYXQgaW5kaWNhdGUgdGhpcyBzdGF0ZTogJ2ZpbmFsJywKICogJ2NvcnJlY3RlZCcsIGFuZCAnYW1lbmRlZCcuCiAqIEBzZWUgaHR0cDovL2hsNy5vcmcvZmhpci9TVFUzL3ZhbHVlc2V0LW9ic2VydmF0aW9uLXN0YXR1cy5odG1sCiAqIEBwYXJhbSBPYnNMaXN0IC0gYSBsaXN0IG9mIE9ic2VydmF0aW9ucwogKiBAcmV0dXJucyB7TGlzdDxPYnNlcnZhdGlvbj59IGEgbGlzdCBvZiB2ZXJpZmllZCBPYnNlcnZhdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gVmVyaWZpZWQoT2JzTGlzdCBMaXN0PE9ic2VydmF0aW9uPik6CiAgT2JzTGlzdCBPIHdoZXJlIE8uc3RhdHVzLnZhbHVlIGluIHsnZmluYWwnLCAnY29ycmVjdGVkJywgJ2FtZW5kZWQnfQoKLyoqCiAqIE9ic2VydmF0aW9ucyB0aGF0IGhhdmUgcXVhbnRpdHkgdmFsdWVzIHJlY29yZGVkIGluIHRoZSByZXF1ZXN0ZWQgdW5pdC4KICogQHBhcmFtIE9ic0xpc3QgLSBhIGxpc3Qgb2YgT2JzZXJ2YXRpb25zCiAqIEBwYXJhbSBVbml0IC0gdGhlIHVuaXQgdG8gcmVxdWlyZSBpbiB0aGUgT2JzZXJ2YXRpb25zIHF1YW50aXR5IHZhbHVlCiAqIEByZXR1cm5zIHtMaXN0PE9ic2VydmF0aW9uPn0gYSBsaXN0IG9mIE9ic2VydmF0aW9ucyB3aXRoIHRoZSByZXF1aXJlZCB1bml0LCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIFdpdGhVbml0KE9ic0xpc3QgTGlzdDxPYnNlcnZhdGlvbj4sIFVuaXQgU3RyaW5nKToKICBPYnNMaXN0IE8KICAgIHdoZXJlIChPLnZhbHVlIGFzIEZISVIuUXVhbnRpdHkpLnVuaXQudmFsdWUgPSBVbml0IG9yIChPLnZhbHVlIGFzIEZISVIuUXVhbnRpdHkpLmNvZGUudmFsdWUgPSBVbml0CgovKioKICogT2JzZXJ2YXRpb25zIHdpdGggYW4gZWZmZWN0aXZlIG9yIGlzc3VlZCBkYXRlIGluIHRoZSBzcGVjaWZpZWQgImxvb2sgYmFjayIgcGVyaW9kLiAgRm9yIGV4YW1wbGUsIExETC1DIFRlc3RzIGluIHRoZQogKiBsYXN0IDYgeWVhcnMuCiAqIFRPRE86IFJlbmFtZSB0byBMb29rQmFjayBvbmNlIHRoZSBleGVjdXRpb24gZW5naW5lIHN1cHBvcnRzIG92ZXJsb2FkZWQgZnVuY3Rpb25zLgogKiBAcGFyYW0gT2JzTGlzdCAtIGEgbGlzdCBvZiBPYnNlcnZhdGlvbnMKICogQHJldHVybnMge0xpc3Q8T2JzZXJ2YXRpb24+fSBhIGxpc3Qgb2YgT2JzZXJ2YXRpb25zIHdpdGggZWZmZWN0aXZlIG9yIGlzc3VlZCBkYXRlIHNwZWNpZmllZCBsb29rYmFjayBwZXJpb2QsIG9yIG51bGwKICogaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gT2JzZXJ2YXRpb25Mb29rQmFjayhPYnNMaXN0IExpc3Q8T2JzZXJ2YXRpb24+LCBMb29rQmFjayBTeXN0ZW0uUXVhbnRpdHkpOgogIE9ic0xpc3QgTwogICAgbGV0IExvb2tCYWNrSW50ZXJ2YWw6IEludGVydmFsW05vdygpIC0gTG9va0JhY2ssIE5vdygpXQogICAgd2hlcmUgKE8uZWZmZWN0aXZlIGFzIEZISVIuZGF0ZVRpbWUpLnZhbHVlIGluIExvb2tCYWNrSW50ZXJ2YWwKICAgICAgb3IgRkhJUkhlbHBlcnMuVG9JbnRlcnZhbChPLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkgb3ZlcmxhcHMgTG9va0JhY2tJbnRlcnZhbAogICAgICBvciBPLmlzc3VlZCBpbiBMb29rQmFja0ludGVydmFsCgovKioKICogVGhlIG1vc3QgcmVjZW50IG9ic2VydmF0aW9uLiAgRm9yIGVhY2ggT2JzZXJ2YXRpb24sIHRoaXMgYWxnb3JpdGhtIHdpbGwgdXNlIHRoZSBGaW5kRGF0ZSBmdW5jdGlvbiwgd2hpY2ggdXNlcyB0aGUKICogZmlyc3Qgbm9uLW51bGwgZGF0ZSB2YWx1ZSBmcm9tIHRoZXNlIGZpZWxkczogZWZmZWN0aXZlRGF0ZVRpbWUsIGVmZmVjdGl2ZVBlcmlvZC5lbmQsIGVmZmVjdGl2ZVBlcmlvZC5zdGFydCwgaXNzdWVkLgogKiBUaGUgZm91bmQgZGF0ZSB3aWxsIGJlIHVzZWQgdG8gY29tcGFyZSBPYnNlcnZhdGlvbnMgYW5kIGRldGVybWluZSB0aGUgbW9zdCByZWNlbnQgb25lLgogKiBAc2VlIEZpbmREYXRlKE9ic2VydmF0aW9uKQogKiBAcGFyYW0gT2JzTGlzdCAtIGEgbGlzdCBvZiBPYnNlcnZhdGlvbnMKICogQHJldHVybnMge09ic2VydmF0aW9ufSB0aGUgbW9zdCByZWNlbnQgT2JzZXJ2YXRpb24gZnJvbSB0aGUgbGlzdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBNb3N0UmVjZW50KE9ic0xpc3QgTGlzdDxPYnNlcnZhdGlvbj4pOgogIExhc3QoT2JzTGlzdCBPIHNvcnQgYnkgQ29hbGVzY2UoKGVmZmVjdGl2ZSBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwgKGVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkuImVuZCIudmFsdWUsIChlZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIudmFsdWUsIGlzc3VlZC52YWx1ZSkpCgovKioKICogRXh0cmFjdHMgdGhlIHF1YW50aXR5IHZhbHVlIGZyb20gYW4gT2JzZXJ2YXRpb24sIHJldHVybmluZyBpdCBhcyBhIENRTCBRdWFudGl0eQogKiBAcGFyYW0gT2JzIC0gYW4gb2JzZXJ2YXRpb24KICogQHJldHVybnMge1N5c3RlbS5RdWFudGl0eX0gdGhlIE9ic2VydmF0aW9uJ3MgdmFsdWUgYXMgYSBxdWFudGl0eSwgb3IgbnVsbCBpZiB0aGVyZSBpcyBubyBxdWFudGl0eSB2YWx1ZQogKi8KZGVmaW5lIGZ1bmN0aW9uIFF1YW50aXR5VmFsdWUoT2JzIE9ic2VydmF0aW9uKToKICBGSElSSGVscGVycy5Ub1F1YW50aXR5KE9icy52YWx1ZSBhcyBGSElSLlF1YW50aXR5KQoKLyoqCiAqIEV4dHJhY3RzIHRoZSBDb2RlYWJsZUNvbmNlcHQgdmFsdWUgZnJvbSBhbiBPYnNlcnZhdGlvbiwgcmV0dXJuaW5nIGl0IGFzIGEgQ1FMIENvbmNlcHQKICogQHBhcmFtIE9icyAtIGFuIG9ic2VydmF0aW9uCiAqIEByZXR1cm5zIHtTeXN0ZW0uQ29uY2VwdH0gdGhlIE9ic2VydmF0aW9uJ3MgdmFsdWUgYXMgYSBjb25jZXB0LCBvciBudWxsIGlmIHRoZXJlIGlzIG5vIENvZGVhYmVDb25jZXB0IHZhbHVlCiAqLwpkZWZpbmUgZnVuY3Rpb24gQ29uY2VwdFZhbHVlKE9icyBPYnNlcnZhdGlvbik6CiAgRkhJUkhlbHBlcnMuVG9Db25jZXB0KE9icy52YWx1ZSBhcyBGSElSLkNvZGVhYmxlQ29uY2VwdCkKCi8qKgogKiBGaW5kcyB0aGUgZmlyc3Qgbm9uLW51bGwgbWVhbmluZ2Z1bCBkYXRlIHRoYXQgY2FuIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIE9ic2VydmF0aW9uLiAgVGhpcyB3aWxsIGxvb2sgdGhyb3VnaCB0aGUKICogZm9sbG93aW5nIGZpZWxkcyBpbiB0aGUgZm9sbG93aW5nIG9yZGVyOiBlZmZlY3RpdmVEYXRlVGltZSwgZWZmZWN0aXZlUGVyaW9kLmVuZCwgZWZmZWN0aXZlUGVyaW9kLnN0YXJ0LCBpc3N1ZWQuCiAqIEBwYXJhbSBPYnMgLSBhbiBPYnNlcnZhdGlvbgogKiBAcmV0dXJucyB7U3lzdGVtLkRhdGVUaW1lfSB0aGUgZmlyc3Qgbm9uLW51bGwgbWVhbmluZ2Z1bCBkYXRlLCBvciBudWxsIGlmIG5vbiBpcyBmb3VuZAogKi8KZGVmaW5lIGZ1bmN0aW9uIEZpbmREYXRlKE9icyBPYnNlcnZhdGlvbik6CiAgQ29hbGVzY2UoKE9icy5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUsIChPYnMuZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSwgKE9icy5lZmZlY3RpdmUgYXMgRkhJUi5QZXJpb2QpLiJzdGFydCIudmFsdWUsIE9icy5pc3N1ZWQudmFsdWUpCgovLyBUT0RPOiBDb25maXJtIHRoYXQgdGhpcyB3b3JrcyBhcyBleHBlY3RlZAovKioKICogVGhlIGhpZ2hlc3Qgb2JzZXJ2YXRpb24uCiAqIFRoZSB2YWx1ZSB3aWxsIGJlIHVzZWQgdG8gY29tcGFyZSBPYnNlcnZhdGlvbnMgYW5kIGRldGVybWluZSB0aGUgaGlnaGVzdCBvbmUuCiAqIEBwYXJhbSBPYnNMaXN0IC0gYSBsaXN0IG9mIE9ic2VydmF0aW9ucwogKiBAcmV0dXJucyB7U3lzdGVtLlF1YW50aXR5fSB0aGUgcXVhbnRpdHkgd2l0aCB0aGUgaGlnaGVzdCB2YWx1ZSBmcm9tIHRoZSBsaXN0LCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIEhpZ2hlc3RPYnNlcnZhdGlvbihPYnNMaXN0IExpc3Q8T2JzZXJ2YXRpb24+KToKICBNYXgoT2JzTGlzdCBPIHJldHVybiBGSElSSGVscGVycy5Ub1F1YW50aXR5KE8udmFsdWUgYXMgRkhJUi5RdWFudGl0eSkpCgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQ09ORElUSU9OUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgovKioKICogRmlsdGVycyBDb25kaXRpb25zIGJ5IGEgY29uY2VwdCByYXRoZXIgdGhhbiBieSBhIFZhbHVlU2V0LiAgSW4gQ1FMIDEuMywgdGhpcyB3aWxsIGJlIGJ1aWx0IGludG8gdGhlIHJldHJpZXZlLAogKiBidXQgZm9yIG5vdywgd2UgbXVzdCB1c2UgYSBxdWVyeSB3aGVyZSBjbGF1c2UuCiAqIEBwYXJhbSBLb25jZXB0IC0gdGhlIGNvbmNlcHQgdG8gZmlsdGVyIG9uIChpbnRlbnRpb25hbGx5IG1pc3BlbGxlZCB0byBhdm9pZCBuYW1pbmcgY2xhc2hlcykKICogQHJldHVybnMge0xpc3Q8T2JzZXJ2YXRpb24+fSBhIGxpc3Qgb2YgQ29uZGl0aW9ucyBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBDb25kaXRpb25zQnlDb25jZXB0KEtvbmNlcHQgU3lzdGVtLkNvbmNlcHQpOgogIFtDb25kaXRpb25dIEMgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KEMuY29kZSkgfiBLb25jZXB0CgovKioKICogQ29uZGl0aW9ucyB0aGF0IGFyZSBjb25maXJtZWQuIEluIEZISVIgU1RVMywgdGhpcyBpcyByZWZsZWN0ZWQgYnkgdmVyaWZpY2F0aW9uU3RhdHVzOiAnY29uZmlybWVkJy4KICogQHNlZSBodHRwOi8vaGw3Lm9yZy9maGlyL1NUVTMvdmFsdWVzZXQtY29uZGl0aW9uLXZlci1zdGF0dXMuaHRtbAogKiBAcGFyYW0gQ29uZExpc3QgLSBhIGxpc3Qgb2YgQ29uZGl0aW9ucwogKiBAcmV0dXJucyB7TGlzdDxDb25kaXRpb24+fSBhIGxpc3Qgb2YgY29uZmlybWVkIENvbmRpdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gQ29uZmlybWVkKENvbmRMaXN0IExpc3Q8Q29uZGl0aW9uPik6CiAgQ29uZExpc3QgQyB3aGVyZSBDLnZlcmlmaWNhdGlvblN0YXR1cy52YWx1ZSA9ICdjb25maXJtZWQnCgovKioKICogQ29uZGl0aW9ucyB0aGF0IGFyZSBhY3RpdmUuIEluIEZISVIgU1RVMywgdGhpcyBpcyByZWZsZWN0ZWQgYnkgY2xpbmljYWxTdGF0dXM6ICdhY3RpdmUnIGFuZCB0aGUgYWJzZW5jZSBvZiBhbnkKICogYWJhdGVtZW50IGluZm9ybWF0aW9uIChpLmUuLCBpZiBpdCBhYmF0ZWQsIGl0IGlzIG5vIGxvbmdlciBhY3RpdmUpLgogKiBUT0RPOiBSZW5hbWUgdG8gQWN0aXZlIG9uY2UgdGhlIGV4ZWN1dGlvbiBlbmdpbmUgc3VwcG9ydHMgb3ZlcmxvYWRlZCBmdW5jdGlvbnMuCiAqIEBzZWUgaHR0cDovL2hsNy5vcmcvZmhpci9TVFUzL3ZhbHVlc2V0LWNvbmRpdGlvbi1jbGluaWNhbC5odG1sCiAqIEBwYXJhbSBDb25kTGlzdCAtIGEgbGlzdCBvZiBDb25kaXRpb25zCiAqIEByZXR1cm5zIHtMaXN0PENvbmRpdGlvbj59IGEgbGlzdCBvZiBhY3RpdmUgQ29uZGl0aW9ucywgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBBY3RpdmVDb25kaXRpb24oQ29uZExpc3QgTGlzdDxDb25kaXRpb24+KToKICBDb25kTGlzdCBDCiAgICB3aGVyZSBDLmNsaW5pY2FsU3RhdHVzLnZhbHVlID0gJ2FjdGl2ZScKICAgICAgYW5kICgKICAgICAgICBDLmFiYXRlbWVudCBpcyBudWxsCiAgICAgICAgb3IgKEMuYWJhdGVtZW50IGFzIEZISVIuYm9vbGVhbikudmFsdWUgaXMgbm90IHRydWUKICAgICAgKQoKLyoqCiAqIENvbmRpdGlvbnMgdGhhdCBhcmUgYWN0aXZlIG9yIHJlY3VycmluZy4gSW4gRkhJUiBTVFUzLCB0aGlzIGlzIHJlZmxlY3RlZCBieSBjbGluaWNhbFN0YXR1czogJ2FjdGl2ZScgb3IgJ3JlbGFwc2UnLgogKiBXZSBkbyBub3QgY2hlY2sgZm9yIG51bGwgYWJhdGVtZW50IGluZm9ybWF0aW9uIGJlY2F1c2UgaXQgbWF5IGhhdmUgZGF0ZXMgZnJvbSB3aGVuIHRoZSBub3cgcmVjdXJyaW5nIGNvbmRpdGlvbgogKiBpbml0aWFsbHkgd2VudCBpbnRvIHJlbWlzc2lvbi4KICogQHNlZSBodHRwOi8vaGw3Lm9yZy9maGlyL1NUVTMvdmFsdWVzZXQtY29uZGl0aW9uLWNsaW5pY2FsLmh0bWwKICogQHBhcmFtIENvbmRMaXN0IC0gYSBsaXN0IG9mIENvbmRpdGlvbnMKICogQHJldHVybnMge0xpc3Q8Q29uZGl0aW9uPn0gYSBsaXN0IG9mIGFjdGl2ZSBvciByZWN1cnJpbmcgQ29uZGl0aW9ucywgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBBY3RpdmVPclJlY3VycmluZyhDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4pOgogIENvbmRMaXN0IEMgd2hlcmUgQy5jbGluaWNhbFN0YXR1cy52YWx1ZSBpbiB7J2FjdGl2ZScsICdyZWxhcHNlJ30KCi8qKgogKiBDb25kaXRpb25zIHdpdGggYW4gb25zZXQgb3IgcmVjb3JkZWQgZGF0ZSBpbiB0aGUgc3BlY2lmaWVkICJsb29rIGJhY2siIHBlcmlvZC4gIEZvciBleGFtcGxlLCBwcmVnbmFuY3kgaW4KICogdGhlIGxhc3QgNDIgd2Vla3MuCiAqIFRPRE86IFJlbmFtZSB0byBMb29rQmFjayBvbmNlIHRoZSBleGVjdXRpb24gZW5naW5lIHN1cHBvcnRzIG92ZXJsb2FkZWQgZnVuY3Rpb25zLgogKiBAcGFyYW0gQ29uZExpc3QgLSBhIGxpc3Qgb2YgQ29uZGl0aW9ucwogKiBAcmV0dXJucyB7TGlzdDxDb25kaXRpb24+fSBhIGxpc3Qgb2YgQ29uZGl0aW9ucyB3aXRoIG9uc2V0IG9yIHJlY29yZGVkIGRhdGUgc3BlY2lmaWVkIGxvb2tiYWNrIHBlcmlvZCwgb3IgbnVsbAogKiBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBDb25kaXRpb25Mb29rQmFjayhDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4sIExvb2tCYWNrIFN5c3RlbS5RdWFudGl0eSk6CiAgQ29uZExpc3QgQwogICAgbGV0IExvb2tCYWNrSW50ZXJ2YWw6IEludGVydmFsW05vdygpIC0gTG9va0JhY2ssIE5vdygpXQogICAgd2hlcmUgKEMub25zZXQgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgaW4gTG9va0JhY2tJbnRlcnZhbAogICAgICBvciBGSElSSGVscGVycy5Ub0ludGVydmFsKEMub25zZXQgYXMgRkhJUi5QZXJpb2QpIG92ZXJsYXBzIExvb2tCYWNrSW50ZXJ2YWwKICAgICAgb3IgQy5hc3NlcnRlZERhdGUgaW4gTG9va0JhY2tJbnRlcnZhbAoKLyoqCiAqIFRoZSBtb3N0IHJlY2VudCBjb25kaXRpb24uICBGb3IgZWFjaCBDb25kaXRpb24sIHRoaXMgYWxnb3JpdGhtIHdpbGwgdXNlIHRoZSBDb2FsZXNjZSBmdW5jdGlvbiwgd2hpY2ggdXNlcyB0aGUKICogZmlyc3Qgbm9uLW51bGwgcmVzdWx0IGZyb20gdGhlc2UgZmllbGRzOiBvbnNldERhdGVUaW1lLCBvbnNldFBlcmlvZC5lbmQsIG9uc2V0UGVyaW9kLnN0YXJ0LCBhc3NlcnRlZERhdGUuCiAqIFRoZSBmb3VuZCBkYXRlIHdpbGwgYmUgdXNlZCB0byBjb21wYXJlIENvbmRpdGlvbnMgYW5kIGRldGVybWluZSB0aGUgbW9zdCByZWNlbnQgb25lLgogKiBAcGFyYW0gQ29uZExpc3QgLSBhIGxpc3Qgb2YgQ29uZGl0aW9ucwogKiBAcmV0dXJucyB7Q29uZGl0aW9ufSB0aGUgbW9zdCByZWNlbnQgQ29uZGl0aW9uIGZyb20gdGhlIGxpc3QsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gTW9zdFJlY2VudENvbmRpdGlvbihDb25kTGlzdCBMaXN0PENvbmRpdGlvbj4pOgogIExhc3QoQ29uZExpc3QgQyBzb3J0IGJ5IENvYWxlc2NlKChvbnNldCBhcyBGSElSLmRhdGVUaW1lKS52YWx1ZSwgKG9uc2V0IGFzIEZISVIuUGVyaW9kKS4iZW5kIi52YWx1ZSwgKG9uc2V0IGFzIEZISVIuUGVyaW9kKS4ic3RhcnQiLnZhbHVlLCBhc3NlcnRlZERhdGUudmFsdWUpKQoKIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFBST0NFRFVSRVMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogLyoqCiAgKiBGaWx0ZXJzIFByb2NlZHVyZXMgYnkgYSBjb25jZXB0IHJhdGhlciB0aGFuIGJ5IGEgVmFsdWVTZXQuICBJbiBDUUwgMS4zLCB0aGlzIHdpbGwgYmUgYnVpbHQgaW50byB0aGUgcmV0cmlldmUsCiAgKiBidXQgZm9yIG5vdywgd2UgbXVzdCB1c2UgYSBxdWVyeSB3aGVyZSBjbGF1c2UuCiAgKiBAcGFyYW0gS29uY2VwdCAtIHRoZSBjb25jZXB0IHRvIGZpbHRlciBvbiAoaW50ZW50aW9uYWxseSBtaXNwZWxsZWQgdG8gYXZvaWQgbmFtaW5nIGNsYXNoZXMpCiAgKiBAcmV0dXJucyB7TGlzdDxQcm9jZWR1cmU+fSBhIGxpc3Qgb2YgUHJvY2VkdXJlcyBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICAqLwogZGVmaW5lIGZ1bmN0aW9uIFByb2NlZHVyZXNCeUNvbmNlcHQoS29uY2VwdCBTeXN0ZW0uQ29uY2VwdCk6CiAgIFtQcm9jZWR1cmVdIFAgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KFAuY29kZSkgfiBLb25jZXB0CgovKioKICogUHJvY2VkdXJlcyB0aGF0IGFyZSBjb21wbGV0ZWQuIEluIEZISVIgU1RVMywgdGhpcyBpcyByZWZsZWN0ZWQgYnkgc3RhdHVzOiAnY29tcGxldGVkJy4gIEluIGFkZGl0aW9uLCB0aGUKICogbm90RG9uZSBmbGFnIG11c3QgYmUgY2hlY2tlZCB0byBlbnN1cmUgaXQgaXMgbm90ICd0cnVlJy4KICogQHNlZSBodHRwczovL3d3dy5obDcub3JnL2ZoaXIvU1RVMy92YWx1ZXNldC1ldmVudC1zdGF0dXMuaHRtbAogKiBAcGFyYW0gUHJvY0xpc3QgLSBhIGxpc3Qgb2YgUHJvY2VkdXJlcwogKiBAcmV0dXJucyB7TGlzdDxQcm9jZWR1cmU+fSBhIGxpc3Qgb2YgY29tcGxldGVkIFByb2NlZHVyZXMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gQ29tcGxldGVkKFByb2NMaXN0IExpc3Q8UHJvY2VkdXJlPik6CiAgUHJvY0xpc3QgUAogICAgd2hlcmUgUC5zdGF0dXMudmFsdWUgPSAnY29tcGxldGVkJwogICAgICBhbmQgUC5ub3REb25lLnZhbHVlIGlzIG5vdCB0cnVlCgovKioKICogUHJvY2VkdXJlcyB0aGF0IGFyZSBpbiBwcm9ncmVzcy4gSW4gRkhJUiBTVFUzLCB0aGlzIGlzIHJlZmxlY3RlZCBieSBzdGF0dXM6ICdpbi1wcm9ncmVzcycuICBJbiBhZGRpdGlvbiwgdGhlCiAqIG5vdERvbmUgZmxhZyBtdXN0IGJlIGNoZWNrZWQgdG8gZW5zdXJlIGl0IGlzIG5vdCAndHJ1ZScuCiAqIEBzZWUgaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL1NUVTMvdmFsdWVzZXQtZXZlbnQtc3RhdHVzLmh0bWwKICogQHBhcmFtIFByb2NMaXN0IC0gYSBsaXN0IG9mIFByb2NlZHVyZXMKICogQHJldHVybnMge0xpc3Q8UHJvY2VkdXJlPn0gYSBsaXN0IG9mIGNvbXBsZXRlZCBQcm9jZWR1cmVzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIFByb2NlZHVyZUluUHJvZ3Jlc3MoUHJvY0xpc3QgTGlzdDxQcm9jZWR1cmU+KToKICBQcm9jTGlzdCBQCiAgICB3aGVyZSBQLnN0YXR1cy52YWx1ZSA9ICdpbi1wcm9ncmVzcycKICAgICAgYW5kIFAubm90RG9uZS52YWx1ZSBpcyBub3QgdHJ1ZQoKLy8gTk9URTogVGhlIERTVFUyIGNvbW1vbnMgYWxzbyBoYXMgUHJvY2VkdXJlUGVyZm9ybWFuY2UsIGJ1dCB3ZSBkbyBub3QgdXNlIHRoYXQgaW4gdGhlIENEUyBBdXRob3JpbmcgVG9vbC4KCi8qKgogKiBQcm9jZWR1cmVzIHBlcmZvcm1lZCBpbiB0aGUgc3BlY2lmaWVkICJsb29rIGJhY2siIHBlcmlvZC4gIEZvciBleGFtcGxlLCBQQ0lzIHBlcmZvcm1lZCBpbiB0aGUKICogcGFzdCAyIHdlZWtzLgogKiBUT0RPOiBSZW5hbWUgdG8gTG9va0JhY2sgb25jZSB0aGUgZXhlY3V0aW9uIGVuZ2luZSBzdXBwb3J0cyBvdmVybG9hZGVkIGZ1bmN0aW9ucy4KICogQHBhcmFtIFByb2NMaXN0IC0gYSBsaXN0IG9mIFByb2NlZHVyZXMKICogQHBhcmFtIExvb2tCYWNrIC0gdGhlIGxvb2tiYWNrIHBlcmlvZCBmb3Igd2hlbiB0aGUgcHJvY2VkdXJlIHdhcyBwZXJmb3JtZWQKICogQHJldHVybnMge0xpc3Q8UHJvY2VkdXJlPn0gYSBsaXN0IG9mIFByb2NlZHVyZXMgcGVyZm9ybWVkIGluIHRoZSBsb29rIGJhY2sgcGVyaW9kLCBvciBudWxsIGlmIG51bGwKICogd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIFByb2NlZHVyZUxvb2tCYWNrKFByb2NMaXN0IExpc3Q8UHJvY2VkdXJlPiwgTG9va0JhY2sgU3lzdGVtLlF1YW50aXR5KToKICBQcm9jTGlzdCBQCiAgICBsZXQgTG9va0JhY2tJbnRlcnZhbDogSW50ZXJ2YWxbTm93KCkgLSBMb29rQmFjaywgTm93KCldCiAgICB3aGVyZSAoUC5wZXJmb3JtZWQgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgaW4gTG9va0JhY2tJbnRlcnZhbAogICAgICBvciBGSElSSGVscGVycy5Ub0ludGVydmFsKFAucGVyZm9ybWVkIGFzIEZISVIuUGVyaW9kKSBvdmVybGFwcyBMb29rQmFja0ludGVydmFsCgovKioKICogVGhlIG1vc3QgcmVjZW50IHByb2NlZHVyZS4gIEZvciBlYWNoIFByb2NlZHVyZSwgdGhpcyBhbGdvcml0aG0gd2lsbCB1c2UgdGhlIENvYWxlc2NlIGZ1bmN0aW9uLCB3aGljaCByZXR1cm5zIHRoZQogKiBmaXJzdCBub24tbnVsbCByZXN1bHQgZnJvbSB0aGVzZSBmaWVsZHM6IHBlcmZvcm1lZERhdGVUaW1lLCBwZXJmb3JtZWRQZXJpb2QuZW5kLCBwZXJmb3JtZWRQZXJpb2Quc3RhcnQuCiAqIFRoZSBmb3VuZCBkYXRlIHdpbGwgYmUgdXNlZCB0byBjb21wYXJlIFByb2NlZHVyZXMgYW5kIGRldGVybWluZSB0aGUgbW9zdCByZWNlbnQgb25lLgogKiBAcGFyYW0gUHJvY0xpc3QgLSBhIGxpc3Qgb2YgUHJvY2VkdXJlcwogKiBAcmV0dXJucyB7UHJvY2VkdXJlfSB0aGUgbW9zdCByZWNlbnQgUHJvY2VkdXJlIGZyb20gdGhlIGxpc3QsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gTW9zdFJlY2VudFByb2NlZHVyZShQcm9jTGlzdCBMaXN0PFByb2NlZHVyZT4pOgogIExhc3QoUHJvY0xpc3QgUCBzb3J0IGJ5IENvYWxlc2NlKChwZXJmb3JtZWQgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUsIChwZXJmb3JtZWQgYXMgRkhJUi5QZXJpb2QpLiJlbmQiLnZhbHVlLCAocGVyZm9ybWVkIGFzIEZISVIuUGVyaW9kKS4ic3RhcnQiLnZhbHVlKSkKCi8vIE5PVEU6IFRoZSBEU1RVMiBjb21tb25zIGFsc28gaGFzIGZ1bmN0aW9ucyBmb3IgUHJvY2VkdXJlUmVxdWVzdHMsIGJ1dCB3ZSBkbyBub3QgdXNlIHRoZW0gaW4gdGhlIENEUyBBdXRob3JpbmcgVG9vbC4KCi8vIE5PVEU6IFRoZSBEU1RVMiBjb21tb25zIGFsc28gaGFzIGZ1bmN0aW9ucyBmb3IgUmVmZXJyYWxSZXF1ZXN0cywgYnV0IHdlIGRvIG5vdCB1c2UgdGhlbSBpbiB0aGUgQ0RTIEF1dGhvcmluZyBUb29sLgoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gTUVESUNBVElPTlMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgovKioKICogRmlsdGVycyBNZWRpY2F0aW9uU3RhdGVtZW50cyBieSBhIGNvbmNlcHQgcmF0aGVyIHRoYW4gYnkgYSBWYWx1ZVNldC4gIEluIENRTCAxLjMsIHRoaXMgd2lsbCBiZSBidWlsdCBpbnRvIHRoZSByZXRyaWV2ZSwKICogYnV0IGZvciBub3csIHdlIG11c3QgdXNlIGEgcXVlcnkgd2hlcmUgY2xhdXNlLgogKiBAcGFyYW0gS29uY2VwdCAtIHRoZSBjb25jZXB0IHRvIGZpbHRlciBvbiAoaW50ZW50aW9uYWxseSBtaXNwZWxsZWQgdG8gYXZvaWQgbmFtaW5nIGNsYXNoZXMpCiAqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25TdGF0ZW1lbnQ+fSBhIGxpc3Qgb2YgTWVkaWNhdGlvblN0YXRlbWVudCBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBNZWRpY2F0aW9uU3RhdGVtZW50c0J5Q29uY2VwdChLb25jZXB0IFN5c3RlbS5Db25jZXB0KToKICBbTWVkaWNhdGlvblN0YXRlbWVudF0gTSB3aGVyZSBGSElSSGVscGVycy5Ub0NvbmNlcHQoTS5tZWRpY2F0aW9uIGFzIEZISVIuQ29kZWFibGVDb25jZXB0KSB+IEtvbmNlcHQKCi8qKgogKiBGaWx0ZXJzIE1lZGljYXRpb25SZXF1ZXN0cyBieSBhIGNvbmNlcHQgcmF0aGVyIHRoYW4gYnkgYSBWYWx1ZVNldC4gIEluIENRTCAxLjMsIHRoaXMgd2lsbCBiZSBidWlsdCBpbnRvIHRoZSByZXRyaWV2ZSwKICogYnV0IGZvciBub3csIHdlIG11c3QgdXNlIGEgcXVlcnkgd2hlcmUgY2xhdXNlLgogKiBAcGFyYW0gS29uY2VwdCAtIHRoZSBjb25jZXB0IHRvIGZpbHRlciBvbiAoaW50ZW50aW9uYWxseSBtaXNwZWxsZWQgdG8gYXZvaWQgbmFtaW5nIGNsYXNoZXMpCiAqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25SZXF1ZXN0Pn0gYSBsaXN0IG9mIE1lZGljYXRpb25SZXF1ZXN0cyBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBNZWRpY2F0aW9uUmVxdWVzdHNCeUNvbmNlcHQoS29uY2VwdCBTeXN0ZW0uQ29uY2VwdCk6CiAgW01lZGljYXRpb25SZXF1ZXN0XSBNIHdoZXJlIEZISVJIZWxwZXJzLlRvQ29uY2VwdChNLm1lZGljYXRpb24gYXMgRkhJUi5Db2RlYWJsZUNvbmNlcHQpIH4gS29uY2VwdAoKLyoqCiAqIE1lZGljYXRpb25zIHRoYXQgYXJlIGFjdGl2ZSwgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50LCBidXQgbm90IG5lY2Vzc2FyaWx5IHZlcmlmaWVkIHZpYSBhIHByZXNjcmlwdGlvbi4gIEZvciBleGFtcGxlLAogKiBtZWRpY2F0aW9ucyB0aGF0IGEgcGF0aWVudCBoYXMgc2VsZi1yZXBvcnRlZCB0byBiZSB0YWtpbmcuICBJbiBGSElSIFNUVTMsIHRoaXMgaXMgcmVmbGVjdGVkIGJ5IE1lZGljYXRpb25TdGF0ZW1lbnQKICogd2l0aCBzdGF0dXMgJ2FjdGl2ZScsIG5vIGZsYWcgaW5kaWNhdGluZyBpdCB3YXNuJ3QgdGFrZW4sIGFuZCBubyBlbmQgZGF0ZSBvciBhbiBlbmQgZGF0ZSBpbiB0aGUgZnV0dXJlLgogKiBUT0RPOiBSZW5hbWUgdG8gQWN0aXZlIG9uY2UgdGhlIGV4ZWN1dGlvbiBlbmdpbmUgc3VwcG9ydHMgb3ZlcmxvYWRlZCBmdW5jdGlvbnMuCiAqIEBzZWUgaHR0cDovL2hsNy5vcmcvZmhpci9TVFUzL3ZhbHVlc2V0LW1lZGljYXRpb24tc3RhdGVtZW50LXN0YXR1cy5odG1sCiAqIEBwYXJhbSBNZWRMaXN0IC0gYSBsaXN0IG9mIE1lZGljYXRpb25TdGF0ZW1lbnRzCiAqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25TdGF0ZW1lbnQ+fSBhIGxpc3Qgb2YgYWN0aXZlIG1lZGljYXRpb24gc3RhdGVtZW50cywgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBBY3RpdmVNZWRpY2F0aW9uU3RhdGVtZW50KE1lZExpc3QgTGlzdDxNZWRpY2F0aW9uU3RhdGVtZW50Pik6CiAgTWVkTGlzdCBNCiAgICBsZXQgRWZmZWN0aXZlUGVyaW9kOiBGSElSSGVscGVycy5Ub0ludGVydmFsKE0uZWZmZWN0aXZlIGFzIEZISVIuUGVyaW9kKQogICAgd2hlcmUgTS5zdGF0dXMudmFsdWUgPSAnYWN0aXZlJwogICAgICBhbmQgTS50YWtlbi52YWx1ZSA9ICd5JwogICAgICBhbmQgKGVuZCBvZiBFZmZlY3RpdmVQZXJpb2QgaXMgbnVsbCBvciBlbmQgb2YgRWZmZWN0aXZlUGVyaW9kIGFmdGVyIE5vdygpKQoKLyoqCiogTWVkaWNhdGlvbnMgdGhhdCBhcmUgYWN0aXZlLCBhY2NvcmRpbmcgdG8gYSBwcmVzY3JpcHRpb24uICBJbiBGSElSIFNUVTMsIHRoaXMgaXMgcmVmbGVjdGVkIGJ5IE1lZGljYXRpb25SZXF1ZXN0Ciogd2l0aCBzdGF0dXMgJ2FjdGl2ZScuICBUaGVyZSBpcyBjdXJyZW50bHkgYW4gb3BlbiBxdWVzdGlvbiBpbiB0aGUgRkhJUiBjaGF0IHRvIGRldGVybWluZSBpZiB0aGlzCiogaXMgdGhlIHJpZ2h0IGFwcHJvYWNoLgoqIFRPRE86IFJldmlzaXQgYmFzZWQgb24gb3V0Y29tZSBvZiBGSElSIGNoYXQuCiogVE9ETzogUmVuYW1lIHRvIEFjdGl2ZSBvbmNlIHRoZSBleGVjdXRpb24gZW5naW5lIHN1cHBvcnRzIG92ZXJsb2FkZWQgZnVuY3Rpb25zLgoqIEBzZWUgaHR0cHM6Ly9jaGF0LmZoaXIub3JnLyNuYXJyb3cvc3RyZWFtL2ltcGxlbWVudGVycy90b3BpYy9NZWFuaW5nLjIwb2YuMjAuMjJhY3RpdmUuMjIuMjBhbmQuMjAuMjJjb21wbGV0ZWQuMjIuMjBpbi4yME1lZGljYXRpb25SZXF1ZXN0CiogQHNlZSBodHRwczovL3d3dy5obDcub3JnL2ZoaXIvU1RVMy92YWx1ZXNldC1tZWRpY2F0aW9uLXJlcXVlc3Qtc3RhdHVzLmh0bWwKKiBAcGFyYW0gTWVkTGlzdCAtIGEgbGlzdCBvZiBNZWRpY2F0aW9uUmVxdWVzdHMKKiBAcmV0dXJucyB7TGlzdDxNZWRpY2F0aW9uUmVxdWVzdD59IGEgbGlzdCBvZiBhY3RpdmUgbWVkaWNhdGlvbiByZXF1ZXN0cywgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KKi8KZGVmaW5lIGZ1bmN0aW9uIEFjdGl2ZU1lZGljYXRpb25SZXF1ZXN0KE1lZExpc3QgTGlzdDxNZWRpY2F0aW9uUmVxdWVzdD4pOgogIE1lZExpc3QgTSB3aGVyZSBNLnN0YXR1cy52YWx1ZSA9ICdhY3RpdmUnCgovKioKKiBNZWRpY2F0aW9ucyB0aGF0IGFyZSBhY3RpdmUgb3IgY29tcGxldGVkLCBhY2NvcmRpbmcgdG8gYSBwcmVzY3JpcHRpb24uICBJbiBGSElSIFNUVTMsIHRoaXMgaXMgcmVmbGVjdGVkIGJ5IE1lZGljYXRpb25SZXF1ZXN0Ciogd2l0aCBzdGF0dXMgJ2FjdGl2ZScgb3IgJ2NvbXBsZXRlZCcKKiBAc2VlIGh0dHBzOi8vd3d3LmhsNy5vcmcvZmhpci9TVFUzL3ZhbHVlc2V0LW1lZGljYXRpb24tcmVxdWVzdC1zdGF0dXMuaHRtbAoqIEBwYXJhbSBNZWRMaXN0IC0gYSBsaXN0IG9mIE1lZGljYXRpb25SZXF1ZXN0cwoqIEByZXR1cm5zIHtMaXN0PE1lZGljYXRpb25SZXF1ZXN0Pn0gYSBsaXN0IG9mIGFjdGl2ZSBtZWRpY2F0aW9uIHJlcXVlc3RzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgoqLwpkZWZpbmUgZnVuY3Rpb24gQWN0aXZlT3JDb21wbGV0ZWRNZWRpY2F0aW9uUmVxdWVzdChNZWRMaXN0IExpc3Q8TWVkaWNhdGlvblJlcXVlc3Q+KToKICBNZWRMaXN0IE0KICAgIHdoZXJlIE0uc3RhdHVzLnZhbHVlID0gJ2FjdGl2ZScKICAgICAgb3IgTS5zdGF0dXMudmFsdWUgPSAnY29tcGxldGVkJwoKLy8gTk9URTogVGhlIERTVFUyIGNvbW1vbnMgYWxzbyBoYXMgQWN0aXZlQ29tcGxldGVkT3JTdG9wcGVkTWVkaWNhdGlvbk9yZGVyLCBidXQgd2UgZG8gbm90IHVzZSB0aGF0IGluIHRoZSBDRFMgQXV0aG9yaW5nIFRvb2wuCgovKioKKiBNZWRpY2F0aW9uIHJlcXVlc3RzIHRoYXQgYXJlIGlzc3VlZCBpbiB0aGUgc3BlY2lmaWVkICJsb29rIGJhY2siIHBlcmlvZC4KKiBUT0RPOiBSZW5hbWUgdG8gTG9va0JhY2sgb25jZSB0aGUgZXhlY3V0aW9uIGVuZ2luZSBzdXBwb3J0cyBvdmVybG9hZGVkIGZ1bmN0aW9ucy4KKiBAcGFyYW0gTWVkTGlzdCAtIGEgbGlzdCBvZiBNZWRpY2F0aW9ucwoqIEBwYXJhbSBMb29rQmFjayAtIHRoZSBsb29rYmFjayBwZXJpb2QgZm9yIHdoZW4gdGhlIG1lZGljYXRpb24gd2FzIHByZXNjcmliZWQKKiBAcmV0dXJucyB7TGlzdDxNZWRpY2F0aW9uUmVxdWVzdD59IGEgbGlzdCBvZiBNZWRpY2F0aW9ucyBwcmVzY3JpYmVkIGluIHRoZSBsb29rIGJhY2sgcGVyaW9kLCBvciBudWxsIGlmIG51bGwKKiB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBNZWRpY2F0aW9uUmVxdWVzdExvb2tCYWNrKE1lZExpc3QgTGlzdDxNZWRpY2F0aW9uUmVxdWVzdD4sIExvb2tCYWNrIFN5c3RlbS5RdWFudGl0eSk6Ck1lZExpc3QgTQogIGxldCBMb29rQmFja0ludGVydmFsOiBJbnRlcnZhbFtOb3coKSAtIExvb2tCYWNrLCBOb3coKV0KICB3aGVyZSBNLmF1dGhvcmVkT24udmFsdWUgaW4gTG9va0JhY2tJbnRlcnZhbAoKLyoqCiogTWVkaWNhdGlvbiBTdGF0ZW1lbnRzIHRoYXQgYXJlIGlzc3VlZCBpbiB0aGUgc3BlY2lmaWVkICJsb29rIGJhY2siIHBlcmlvZC4KKiBUT0RPOiBSZW5hbWUgdG8gTG9va0JhY2sgb25jZSB0aGUgZXhlY3V0aW9uIGVuZ2luZSBzdXBwb3J0cyBvdmVybG9hZGVkIGZ1bmN0aW9ucy4KKiBAcGFyYW0gTWVkTGlzdCAtIGEgbGlzdCBvZiBNZWRpY2F0aW9ucwoqIEBwYXJhbSBMb29rQmFjayAtIHRoZSBsb29rYmFjayBwZXJpb2QgZm9yIHdoZW4gdGhlIG1lZGljYXRpb24gd2FzIHByZXNjcmliZWQKKiBAcmV0dXJucyB7TGlzdDxNZWRpY2F0aW9uU3RhdGVtZW50Pn0gYSBsaXN0IG9mIE1lZGljYXRpb25zIHByZXNjcmliZWQgaW4gdGhlIGxvb2sgYmFjayBwZXJpb2QsIG9yIG51bGwgaWYgbnVsbAoqIHdhcyBwYXNzZWQgaW4KKi8KZGVmaW5lIGZ1bmN0aW9uIE1lZGljYXRpb25TdGF0ZW1lbnRMb29rQmFjayhNZWRMaXN0IExpc3Q8TWVkaWNhdGlvblN0YXRlbWVudD4sIExvb2tCYWNrIFN5c3RlbS5RdWFudGl0eSk6Ck1lZExpc3QgTQogIGxldCBMb29rQmFja0ludGVydmFsOiBJbnRlcnZhbFtOb3coKSAtIExvb2tCYWNrLCBOb3coKV0KICB3aGVyZSAoTS5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkudmFsdWUgaW4gTG9va0JhY2tJbnRlcnZhbAogICAgb3IgRkhJUkhlbHBlcnMuVG9JbnRlcnZhbChNLmVmZmVjdGl2ZSBhcyBGSElSLlBlcmlvZCkgb3ZlcmxhcHMgTG9va0JhY2tJbnRlcnZhbAoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gRU5DT1VOVEVSUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCi8qKgogKiBGaWx0ZXJzIEVuY291bnRlcnMgYnkgYSBjb25jZXB0IHJhdGhlciB0aGFuIGJ5IGEgVmFsdWVTZXQuICBJbiBDUUwgMS4zLCB0aGlzIHdpbGwgYmUgYnVpbHQgaW50byB0aGUgcmV0cmlldmUsCiAqIGJ1dCBmb3Igbm93LCB3ZSBtdXN0IHVzZSBhIHF1ZXJ5IHdoZXJlIGNsYXVzZS4KICogQHBhcmFtIEtvbmNlcHQgLSB0aGUgY29uY2VwdCB0byBmaWx0ZXIgb24gKGludGVudGlvbmFsbHkgbWlzcGVsbGVkIHRvIGF2b2lkIG5hbWluZyBjbGFzaGVzKQogKiBAcmV0dXJucyB7TGlzdDxFbmNvdW50ZXI+fSBhIGxpc3Qgb2YgRW5jb3VudGVycyBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBFbmNvdW50ZXJzQnlDb25jZXB0KEtvbmNlcHQgU3lzdGVtLkNvbmNlcHQpOgogIFtFbmNvdW50ZXJdIEUgd2hlcmUgZXhpc3RzKCAoRS50eXBlKSBFVCB3aGVyZSBGSElSSGVscGVycy5Ub0NvbmNlcHQoRVQpIH4gS29uY2VwdCApCgovKioKICogRW5jb3VudGVycyB0aGF0IGFyZSBpbiBwcm9ncmVzcy4gSW4gRkhJUiBTVFUzLCB0aGlzIGlzIHJlZmxlY3RlZCBieSBzdGF0dXM6ICdpbi1wcm9ncmVzcycuCiAqIEBzZWUgaHR0cDovL2hsNy5vcmcvZmhpci9TVFUzL3ZhbHVlc2V0LWVuY291bnRlci1zdGF0dXMuaHRtbAogKiBAcGFyYW0gRW5jTGlzdCAtIGEgbGlzdCBvZiBFbmNvdW50ZXJzCiAqIEByZXR1cm5zIHtMaXN0PEVuY291bnRlcj59IGEgbGlzdCBvZiBpbiBwcm9ncmVzcyBlbmNvdW50ZXJzLCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIEluUHJvZ3Jlc3MoRW5jTGlzdCBMaXN0PEVuY291bnRlcj4pOgogIEVuY0xpc3QgRQogICAgd2hlcmUgRS5zdGF0dXMudmFsdWUgPSAnaW4tcHJvZ3Jlc3MnCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBBTExFUkdZIElOVE9MRVJBTkNFUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCi8qKgogKiBGaWx0ZXJzIEFsbGVyZ3lJbnRvbGVyYW5jZXMgYnkgYSBjb25jZXB0IHJhdGhlciB0aGFuIGJ5IGEgVmFsdWVTZXQuICBJbiBDUUwgMS4zLCB0aGlzIHdpbGwgYmUgYnVpbHQgaW50byB0aGUgcmV0cmlldmUsCiAqIGJ1dCBmb3Igbm93LCB3ZSBtdXN0IHVzZSBhIHF1ZXJ5IHdoZXJlIGNsYXVzZS4KICogQHBhcmFtIEtvbmNlcHQgLSB0aGUgY29uY2VwdCB0byBmaWx0ZXIgb24gKGludGVudGlvbmFsbHkgbWlzcGVsbGVkIHRvIGF2b2lkIG5hbWluZyBjbGFzaGVzKQogKiBAcmV0dXJucyB7TGlzdDxBbGxlcmd5SW50b2xlcmFuY2U+fSBhIGxpc3Qgb2YgQWxsZXJneSBJbnRvbGVyYW5jZXMgbWF0Y2hpbmcgdGhlIGNvbmNlcHQsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gQWxsZXJneUludG9sZXJhbmNlc0J5Q29uY2VwdChLb25jZXB0IFN5c3RlbS5Db25jZXB0KToKICBbQWxsZXJneUludG9sZXJhbmNlXSBBIHdoZXJlIEZISVJIZWxwZXJzLlRvQ29uY2VwdChBLmNvZGUpIH4gS29uY2VwdAoKLyoqCiogQWxsZXJneUludG9sZXJhbmNlcyB0aGF0IGFyZSBhY3RpdmUgb3IgY29uZmlybWVkLiAgSW4gRkhJUiBTVFUzLCB0aGlzIGlzIHJlZmxlY3RlZCBieSBBbGxlcmd5SW50b2xlcmFuY2UKKiB3aXRoIGNsaW5pY2FsU3RhdHVzICdhY3RpdmUnIG9yIHZlcmlmaWNhdGlvblN0YXR1cyAnY29uZmlybWVkJwoqIEBzZWUgaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL1NUVTMvdmFsdWVzZXQtYWxsZXJneS1jbGluaWNhbC1zdGF0dXMuaHRtbAoqIEBzZWUgaHR0cHM6Ly93d3cuaGw3Lm9yZy9maGlyL1NUVTMvdmFsdWVzZXQtYWxsZXJneS12ZXJpZmljYXRpb24tc3RhdHVzLmh0bWwKKiBAcGFyYW0gQWxsZXJneUludG9sTGlzdCAtIGEgbGlzdCBvZiBBbGxlcmd5SW50b2xlcmFuY2VzCiogQHJldHVybnMge0xpc3Q8QWxsZXJneUludG9sZXJhbmNlPn0gYSBsaXN0IG9mIGFjdGl2ZSBvciBjb25maXJtZWQgYWxsZXJneSBpbnRvbGVyYW5jZXMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiovCmRlZmluZSBmdW5jdGlvbiBBY3RpdmVPckNvbmZpcm1lZEFsbGVyZ3lJbnRvbGVyYW5jZShBbGxlcmd5SW50b2xMaXN0IExpc3Q8QWxsZXJneUludG9sZXJhbmNlPik6CiAgQWxsZXJneUludG9sTGlzdCBBCiAgICB3aGVyZSBBLmNsaW5pY2FsU3RhdHVzLnZhbHVlID0gJ2FjdGl2ZScKICAgICAgb3IgQS52ZXJpZmljYXRpb25TdGF0dXMudmFsdWUgPSAnY29uZmlybWVkJwoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gSW1tdW5pemF0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgogLyoqCiAgKiBGaWx0ZXJzIEltbXVuaXphdGlvbnMgYnkgYSBjb25jZXB0IHJhdGhlciB0aGFuIGJ5IGEgVmFsdWVTZXQuCiAgKiBAcGFyYW0gS29uY2VwdCAtIHRoZSBjb25jZXB0IHRvIGZpbHRlciBvbiAoaW50ZW50aW9uYWxseSBtaXNwZWxsZWQgdG8gYXZvaWQgbmFtaW5nIGNsYXNoZXMpCiAgKiBAcmV0dXJucyB7TGlzdDxJbW11bml6YXRpb24+fSBhIGxpc3Qgb2YgSW1tdW5pemF0aW9ucyBtYXRjaGluZyB0aGUgY29uY2VwdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICAqLwogZGVmaW5lIGZ1bmN0aW9uIEltbXVuaXphdGlvbnNCeUNvbmNlcHQoS29uY2VwdCBTeXN0ZW0uQ29uY2VwdCk6CiAgIFtJbW11bml6YXRpb25dIEkgd2hlcmUgRkhJUkhlbHBlcnMuVG9Db25jZXB0KEkudmFjY2luZUNvZGUpIH4gS29uY2VwdAoKLyoqCiAqIEltbXVuaXphdGlvbnMgdGhhdCBhcmUgY29tcGxldGVkLiBJbiBGSElSIFNUVTMsIHRoaXMgaXMgcmVmbGVjdGVkIGJ5IHN0YXR1czogJ2NvbXBsZXRlZCcuICBJbiBhZGRpdGlvbiwgdGhlCiAqIG5vdEdpdmVuIGZsYWcgbXVzdCBiZSBjaGVja2VkIHRvIGVuc3VyZSBpdCBpcyBub3QgJ3RydWUnLgogKiBAc2VlIGh0dHA6Ly9obDcub3JnL2ZoaXIvU1RVMy92YWx1ZXNldC1pbW11bml6YXRpb24tc3RhdHVzLmh0bWwKICogQHBhcmFtIEltbXVuaXphdGlvbkxpc3QgLSBhIGxpc3Qgb2YgSW1tdW5pemF0aW9ucwogKiBAcmV0dXJucyB7TGlzdDxJbW11bml6YXRpb24+fSBhIGxpc3Qgb2YgY29tcGxldGVkIEltbXVuaXphdGlvbnMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gQ29tcGxldGVkSW1tdW5pemF0aW9uKEltbXVuaXphdGlvbkxpc3QgTGlzdDxJbW11bml6YXRpb24+KToKICBJbW11bml6YXRpb25MaXN0IEkKICAgIHdoZXJlIEkuc3RhdHVzLnZhbHVlID0gJ2NvbXBsZXRlZCcKICAgICAgYW5kIEkubm90R2l2ZW4udmFsdWUgaXMgbm90IHRydWUKCi8qKgogKiBJbW11bml6YXRpb25zIGdpdmVuIGluIHRoZSBzcGVjaWZpZWQgImxvb2sgYmFjayIgcGVyaW9kLgogKiBUT0RPOiBSZW5hbWUgdG8gTG9va0JhY2sgb25jZSB0aGUgZXhlY3V0aW9uIGVuZ2luZSBzdXBwb3J0cyBvdmVybG9hZGVkIGZ1bmN0aW9ucy4KICogQHBhcmFtIEltbXVuaXphdGlvbkxpc3QgLSBhIGxpc3Qgb2YgSW1tdW5pemF0aW9ucwogKiBAcGFyYW0gTG9va0JhY2sgLSB0aGUgbG9va2JhY2sgcGVyaW9kIGZvciB3aGVuIHRoZSBpbW11bml6YXRpb24gd2FzIGdpdmVuCiAqIEByZXR1cm5zIHtMaXN0PEltbXVuaXphdGlvbj59IGEgbGlzdCBvZiBJbW11bml6YXRpb25zIGdpdmVuIGluIHRoZSBsb29rIGJhY2sgcGVyaW9kLCBvciBudWxsIGlmIG51bGwKICogd2FzIHBhc3NlZCBpbgogKi8KZGVmaW5lIGZ1bmN0aW9uIEltbXVuaXphdGlvbkxvb2tCYWNrKEltbXVuaXphdGlvbkxpc3QgTGlzdDxJbW11bml6YXRpb24+LCBMb29rQmFjayBTeXN0ZW0uUXVhbnRpdHkpOgogIEltbXVuaXphdGlvbkxpc3QgSQogICAgbGV0IExvb2tCYWNrSW50ZXJ2YWw6IEludGVydmFsW05vdygpIC0gTG9va0JhY2ssIE5vdygpXQogICAgd2hlcmUgSS5kYXRlLnZhbHVlIGluIExvb2tCYWNrSW50ZXJ2YWwKCi8qKgogKiBUaGUgbW9zdCByZWNlbnQgSW1tdW5pemF0aW9uLgogKiBAcGFyYW0gSW1tdW5pemF0aW9uTGlzdCAtIGEgbGlzdCBvZiBJbW11bml6YXRpb25zCiAqIEByZXR1cm5zIHtJbW11bml6YXRpb259IHRoZSBtb3N0IHJlY2VudCBJbW11bml6YXRpb24gZnJvbSB0aGUgbGlzdCwgb3IgbnVsbCBpZiBudWxsIHdhcyBwYXNzZWQgaW4KICovCmRlZmluZSBmdW5jdGlvbiBNb3N0UmVjZW50SW1tdW5pemF0aW9uKEltbXVuaXphdGlvbkxpc3QgTGlzdDxJbW11bml6YXRpb24+KToKICBMYXN0KEltbXVuaXphdGlvbkxpc3QgSSBzb3J0IGJ5IGRhdGUudmFsdWUpCgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBEZXZpY2VzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCiAvKioKICAqIEZpbHRlcnMgRGV2aWNlcyBieSBhIGNvbmNlcHQgcmF0aGVyIHRoYW4gYnkgYSBWYWx1ZVNldC4KICAqIEBwYXJhbSBLb25jZXB0IC0gdGhlIGNvbmNlcHQgdG8gZmlsdGVyIG9uIChpbnRlbnRpb25hbGx5IG1pc3BlbGxlZCB0byBhdm9pZCBuYW1pbmcgY2xhc2hlcykKICAqIEByZXR1cm5zIHtMaXN0PERldmljZT59IGEgbGlzdCBvZiBEZXZpY2VzIG1hdGNoaW5nIHRoZSBjb25jZXB0LCBvciBudWxsIGlmIG51bGwgd2FzIHBhc3NlZCBpbgogICovCiBkZWZpbmUgZnVuY3Rpb24gRGV2aWNlc0J5Q29uY2VwdChLb25jZXB0IFN5c3RlbS5Db25jZXB0KToKICAgW0RldmljZV0gRCB3aGVyZSBGSElSSGVscGVycy5Ub0NvbmNlcHQoRC50eXBlKSB+IEtvbmNlcHQKCi8qKgogKiBEZXZpY2VzIHRoYXQgYXJlIGFjdGl2ZS4gSW4gRkhJUiBTVFUzLCB0aGlzIGlzIHJlZmxlY3RlZCBieSBzdGF0dXM6ICdhY3RpdmUnLgogKiBAc2VlIGh0dHA6Ly9obDcub3JnL2ZoaXIvU1RVMy92YWx1ZXNldC1kZXZpY2Utc3RhdHVzLmh0bWwKICogQHBhcmFtIERldmljZUxpc3QgLSBhIGxpc3Qgb2YgRGV2aWNlcwogKiBAcmV0dXJucyB7TGlzdDxEZXZpY2U+fSBhIGxpc3Qgb2YgYWN0aXZlIERldmljZXMsIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluCiAqLwpkZWZpbmUgZnVuY3Rpb24gQWN0aXZlRGV2aWNlKERldmljZUxpc3QgTGlzdDxEZXZpY2U+KToKICBEZXZpY2VMaXN0IEQKICAgIHdoZXJlIEQuc3RhdHVzLnZhbHVlID0gJ2FjdGl2ZScKCi8vIE5PVEU6IFRoZSBEU1RVMiBjb21tb25zIGFsc28gaGFzIEdvYWxMb29rQmFjaywgYnV0IHdlIGRvIG5vdCB1c2UgdGhhdCBpbiB0aGUgQ0RTIEF1dGhvcmluZyBUb29sLgo="
          }
        ]
      }
    },
     {
      "resource": {
        "resourceType": "Library",
        "id": "ATInternalCDSConnectConversions",
        "version": "1",
        "type": {
          "coding": [
            {
              "code": "logic-library"
            }
          ]
        },
        "status": "draft",
        "content": [
          {
            "contentType": "text/cql",
            "data": "LyoqCiAqIFRoaXMgbGlicmFyeSBzdXBwb3J0cyBjb252ZXJzaW9ucyBmcm9tIG9uZSB1bml0IHRvIGFub3RoZXIuICBDb252ZXJzaW9ucyBhcmUgYWRkZWQgYXMgbmVlZGVkIGJ5IGFydGlmYWN0cyBpbgogKiBkZXZlbG9wbWVudC4gIFNpbmNlIGNhc2UgaXMgaW1wb3J0YW50IGZvciBzb21lIHVuaXRzLCByYXRoZXIgdGhhbiB1c2Ugb3VyIG5vcm1hbCBQYXNjYWxDYXNpbmcsIHdlIHVzZSB1bmRlcnNjb3JlCiAqIHRvIHNlcGFyYXRlIHdvcmRzIGFuZCBtYWludGFpbiBjYXNpbmcuICBGb3IgZXhhbXBsZSwgdG8gY29udmVydCB0byAibWcvZEwiLCByYXRoZXIgdGhhbiBjYWxsIHRoZSBmdW5jdGlvbgogKiBgVG9NZ1BlckRMYCwgd2UgY2FsbCBpdCBgdG9fbWdfcGVyX2RMYCwgaW4gb3JkZXIgdG8gbWFpbnRhaW4gY2FzaW5nLgogKi8KbGlicmFyeSBBVEludGVybmFsQ0RTQ29ubmVjdENvbnZlcnNpb25zIHZlcnNpb24gJzEnCgovKioKICogQ29udmVydHMgbW1vbC9MIHRvIG1nL2RMLCBvciBpZiBhbHJlYWR5IG1kL2RMLCBsZWF2ZXMgaXQgYXMgaXMuICBJZiBhbiB1bnJlY29nbml6ZWQgdW5pdCBpcyB1c2VkLCBudWxsIGlzIHJldHVybmVkLgogKiBAcGFyYW0gUSAtIGEgUXVhbnRpdHkKICogQHJldHVybnMge1F1YW50aXR5fSBhIFF1YW50aXR5IHVzaW5nIG1nL2RMIHVuaXRzIG9yIG51bGwgaWYgbnVsbCB3YXMgcGFzc2VkIGluIG9yIHVuaXQgY291bGRuJ3QgYmUgY29udmVydGVkCiAqLwpkZWZpbmUgZnVuY3Rpb24gdG9fbWdfcGVyX2RMIChRIFF1YW50aXR5KToKICBjYXNlCiAgICB3aGVuIFEudW5pdCA9ICdtZy9kTCcgdGhlbiBRCiAgICB3aGVuIFEudW5pdCA9ICdtbW9sL0wnIHRoZW4gUXVhbnRpdHl7dmFsdWU6IFEudmFsdWUgKiAzOC42Njk3NiwgdW5pdDogJ21nL2RMJ30KICAgIGVsc2UgbnVsbAogIGVuZAo="
          }
        ]
      }
    }
  ]
}
